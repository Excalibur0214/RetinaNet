---
MXNET_VERSION: "mxnet"
output_path: "./output/retinanet/"
symbol: retina_resnet_50
gpus: '0'
CLASS_AGNOSTIC: false
SCALES:
- 896
- 1408
default:
  frequent: 100
  kvstore: device
network:
  pretrained: "./model/pretrained_model/resnet-50"
  pretrained_epoch: 0
  PIXEL_MEANS:
  - 103.06
  - 115.90
  - 123.15
  IMAGE_STRIDE: 128

  FIXED_PARAMS:
  - conv0
  - gamma
  - beta
  - conv1
  - stage1
  FIXED_PARAMS_SHARED:
  - conv1
  - bn_conv1
  - res2
  - bn2
  - res3
  - bn3
  - res4
  - bn4
  - gamma
  - beta

  p4_RCNN_FEAT_STRIDE: 16
  p4_RPN_FEAT_STRIDE: 16

  p4_ANCHOR_RATIOS:
  - 0.5
  - 1
  - 2
  p4_ANCHOR_SCALES:
  - 8
  - 10
  - 12
  p4_NUM_ANCHORS: 9

  p5_RCNN_FEAT_STRIDE: 32
  p5_RPN_FEAT_STRIDE: 32

  p5_ANCHOR_RATIOS:
  - 0.5
  - 1
  - 2
  p5_ANCHOR_SCALES:
  - 8
  - 10
  - 12
  p5_NUM_ANCHORS: 9

  p6_RCNN_FEAT_STRIDE: 64
  p6_RPN_FEAT_STRIDE: 64

  p6_ANCHOR_RATIOS:
  - 0.5
  - 1
  - 2
  p6_ANCHOR_SCALES:
  - 8
  - 10
  - 12
  p6_NUM_ANCHORS: 9

  p7_RCNN_FEAT_STRIDE: 128
  p7_RPN_FEAT_STRIDE: 128

  p7_ANCHOR_RATIOS:
  - 0.5
  - 1
  - 2
  p7_ANCHOR_SCALES:
  - 8
  - 10
  - 12
  p7_NUM_ANCHORS: 9

dataset:
  NUM_CLASSES: 21
  dataset: PascalVOC
  dataset_path: "./data/voc/VOCdevkit2007"
  image_set: 2007_trainval
  root_path: "./data"
  test_image_set: 2007_test
  proposal: rpn
TRAIN:
  lr: 0.000001
  lr_step: '100000.333'
  warmup: false
  warmup_lr: 0.0002
  # typically we will use 8000 warmup step for single GPU for COCO
  warmup_step: 1000
  begin_epoch: 9
  end_epoch: 1000
  model_prefix: 'rcnn_kitti'
  # whether resume training
  RESUME: true
  # whether flip image
  FLIP: true
  # whether shuffle image
  SHUFFLE: false
  # whether use OHEM
  ENABLE_OHEM: false
  # size of images for each device, 2 for rcnn, 1 for rpn and e2e
  BATCH_IMAGES: 1
  # e2e changes behavior of anchor loader and metric
  END2END: true
  # group images with similar aspect ratio
  ASPECT_GROUPING: true
  # R-CNN
  # rcnn rois batch size
  BATCH_ROIS: 128
  BATCH_ROIS_OHEM: 128
  # rcnn rois sampling params
  FG_FRACTION: 0.25
  FG_THRESH: 0.5
  BG_THRESH_HI: 0.5
  BG_THRESH_LO: 0.1
  # rcnn bounding box regression params
  BBOX_REGRESSION_THRESH: 0.5
  BBOX_WEIGHTS:
  - 1.0
  - 1.0
  - 1.0
  - 1.0

  # RPN anchor loader
  # rpn anchors batch size
  RPN_BATCH_SIZE: 512
  # rpn anchors sampling params
  RPN_FG_FRACTION: 0.5
  RPN_POSITIVE_OVERLAP: 0.5
  RPN_NEGATIVE_OVERLAP: 0.4
  RPN_CLOBBER_POSITIVES: false
  # rpn bounding box regression params
  RPN_BBOX_WEIGHTS:
  - 1.0
  - 1.0
  - 1.0
  - 1.0
  RPN_POSITIVE_WEIGHT: -1.0
  # used for end2end training
  # RPN proposal
  CXX_PROPOSAL: false
  RPN_NMS_THRESH: 0.7
  RPN_PRE_NMS_TOP_N: 6000
  RPN_POST_NMS_TOP_N: 300
  RPN_MIN_SIZE: 0
  # approximate bounding box regression
  BBOX_NORMALIZATION_PRECOMPUTED: true
  BBOX_MEANS:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  BBOX_STDS:
  - 0.1
  - 0.1
  - 0.2
  - 0.2
TEST:
  # use rpn to generate proposal
  HAS_RPN: true
  # size of images for each device
  BATCH_IMAGES: 2
  # RPN proposal
  CXX_PROPOSAL: false
  RPN_NMS_THRESH: 0.7
  RPN_PRE_NMS_TOP_N: 6000
  RPN_POST_NMS_TOP_N: 300
  RPN_MIN_SIZE: 0
  # RPN generate proposal
  PROPOSAL_NMS_THRESH: 0.7
  PROPOSAL_PRE_NMS_TOP_N: 20000
  PROPOSAL_POST_NMS_TOP_N: 2000
  PROPOSAL_MIN_SIZE: 0
  # RCNN nms
  NMS: 0.3
  test_epoch: 15
  max_per_image: 100

